make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0
 
make: *** No rule to make target `all'.  Stop.


# Make data base, printed on Mon Jun  6 23:01:22 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# environment
VSCODE_LOG_NATIVE = false
# environment
NVM_INC = /Users/adamy/.nvm/versions/node/v14.16.1/include/node
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from `Makefile', line 175)
brew_install = 	@if which $(1) >/dev/null; then echo "$(1) installed..."; else echo "Installing $(1)..."; brew install $(1); fi
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/adamy/Developer/Personal/MoviesApp/TMDb
# makefile (from `Makefile', line 3)
SHELL := /bin/bash
# environment
 
VSCODE_NLS_CONFIG = {"locale":"en-gb","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# makefile (from `Makefile', line 6)
SCHEME := TMDb
# makefile (from `Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# makefile (from `Makefile', line 9)
IPHONE_DESTINATION := 'platform=iOS Simulator,name=iPhone 13 Pro,OS=15.2'
# environment
VSCODE_IPC_HOOK_EXTHOST = /var/folders/dp/9gvtrq_d1cxb__yvz_bhf8zm0000gp/T/vscode-ipc-46a7a888-3c9f-47e3-afe3-e63c744d0712.sock
# environment
VSCODE_CWD = /Users/adamy/Developer/Personal/MoviesApp/TMDb
# environment
PATH = /Users/adamy/.nvm/versions/node/v14.16.1/bin:/Users/adamy/.rbenv/shims:/usr/local/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/Apple/usr/bin
# makefile (from `Makefile', line 4)
OS_NAME := darwin
# environment
LSCOLORS = Gxfxcxdxbxegedabagacad
# makefile (from `Makefile', line 10)
WATCH_DESTINATION := 'platform=watchOS Simulator,name=Apple Watch Series 7 - 45mm,OS=8.3'
# makefile (from `Makefile', line 149)
DOC_WARNINGS := 
# environment
NVM_BIN = /Users/adamy/.nvm/versions/node/v14.16.1/bin
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# makefile (from `Makefile', line 8)
MAC_DESTINATION := 'platform=macOS,arch=x86_64'
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# makefile (from `Makefile', line 12)
SONARCLOUD_ORGANISATION := adamayoung
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.6oLEMmpMJH/Listeners
# automatic
%F = $(notdir $%)
# makefile (from `Makefile', line 5)
DOCKER_SWIFT_VERSION := 5.5
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /Users/adamy/Developer/Personal/MoviesApp/TMDb
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /Users/adamy
# default
MAKEFILEPATH := /Applications/Xcode.app/Contents/Developer/Makefiles
# environment
VSCODE_CLI = 1
# environment
VSCODE_CODE_CACHE_PATH = /Users/adamy/Library/Application Support/Code/CachedData/c3511e6c69bb39013c4a4b7b9566ec1ca73fc4d5
# environment
LOGNAME = adamy
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
NVM_CD_FLAGS = -q
# environment
ZSH = /Users/adamy/.oh-my-zsh
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XPC_FLAGS = 0x0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 3
# default
MAKE_VERSION := 3.81
# environment
USER = adamy
# makefile
.DEFAULT_GOAL := lint
# environment
TERM_SESSION_ID = 44576A9E-CDD0-4FB7-884F-E7566AB99BB2
# environment
LESS = -R
# automatic
%D = $(patsubst %/,%,$(dir $%))
# default
MAKE_COMMAND := /Applications/Xcode.app/Contents/Developer/usr/bin/make
# environment
TERM_PROGRAM = Apple_Terminal
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/dp/9gvtrq_d1cxb__yvz_bhf8zm0000gp/T/
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /Users/adamy/Library/Application Support/Code/1.67.2-main.sock
# makefile
MAKEFLAGS = Rrqp
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
TERM_PROGRAM_VERSION = 445
# environment
NVM_DIR = /Users/adamy/.nvm
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.813300927.813300936.EE296A5D-B927-4D83-BBB5-0ED80BCA9964
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# makefile (from `Makefile', line 7)
MAC_SDK := macosx12.1
# makefile (from `Makefile', line 13)
SONARCLOUD_PROJECT_NAME := TMDb
# environment
__CF_USER_TEXT_ENCODING = 0x1F6:0:2
# environment
COMMAND_MODE = unix2003
# default
MAKEFILES := 
# environment
RBENV_SHELL = zsh
# automatic
<F = $(notdir $<)
# environment
PAGER = less
# environment
LC_ALL = C
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# default
.INCLUDE_DIRS = /usr/local/include
# makefile (from `Makefile', line 11)
TV_DESTINATION := 'platform=tvOS Simulator,name=Apple TV 4K (2nd generation),OS=15.2'
# environment
MAKELEVEL := 0
# environment
LANG = C
# environment
TERM = xterm-256color
# environment
VSCODE_PID = 28554
# variable set hash-table stats:
# Load=89/1024=9%, Rehash=0, Collisions=3/122=2%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777225, inode 11941003): 18 files, no impossibilities.

# 18 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

test-linux:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 121):
	@echo "Testing for Linux..."
	@if [ "$(OS_NAME)" == "darwin" ]; then \
	docker run --rm --privileged --interactive --tty -v "$$(pwd):/src" -w "/src" swift:$(DOCKER_SWIFT_VERSION)-focal /bin/bash -c "swift test  --parallel --build-path ./.build/linux"; \
	else \
	make test; \
	fi
	

build-linux:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 68):
	@echo "Building for Linux..."
	@if [ "$(OS_NAME)" == "darwin" ]; then \
	docker run --rm --privileged --interactive --tty -v "$$(pwd):/src" -w "/src" swift:$(DOCKER_SWIFT_VERSION)-focal /bin/bash -c "swift build --build-path ./.build/linux"; \
	else \
	make build; \
	fi
	

# Not a target:
all:
#  Command-line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

test-tvos:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 112):
 
	@echo "Testing for tvOS..."
	@xcodebuild \
	-scheme "$(SCHEME)" \
	-sdk appletvsimulator \
	-destination $(TV_DESTINATION) \
	-parallel-testing-enabled YES \
	test
	

test-macos:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 85):
	@echo "Testing for macOS..."
	@xcodebuild \
	-scheme "$(SCHEME)" \
	-sdk $(MAC_SDK) \
	-destination $(MAC_DESTINATION) \
	-parallel-testing-enabled YES \
	test
	

build-tvos:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 60):
	@echo "Building for tvOS..."
	@xcodebuild \
	-scheme "$(SCHEME)" \
	-sdk appletvsimulator \
	-destination $(TV_DESTINATION) \
	clean build
	

build-macos:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 36):
	@echo "Building for macOS..."
	@xcodebuild \
	-scheme "$(SCHEME)" \
	-sdk $(MAC_SDK) \
	-destination $(MAC_DESTINATION) \
	clean build
	

test-watchos:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 103):
	@echo "Testing for watchOS..."
	@xcodebuild \
	-scheme "$(SCHEME)" \
	-sdk watchsimulator \
	-destination $(WATCH_DESTINATION) \
	-parallel-testing-enabled YES \
	test
	

build-watchos:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 52):
	@echo "Building for watchOS..."
	@xcodebuild \
	-scheme "$(SCHEME)" \
	-sdk watchsimulator \
	-destination $(WATCH_DESTINATION) \
	clean build
	

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2021-11-30 11:07:35
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

test:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 81):
	@echo "Testing for current platform..."
	@swift test --parallel
	

build:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 32):
	@echo "Building for current platform..."
	@swift build
	

test-all: test-macos test-ios test-watchos test-linux
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build-all: build-macos build-ios build-watchos build-linux
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

test-docs:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 159):
	@test "$(DOC_WARNINGS)" = "" \
	|| (echo "xcodebuild docbuild failed:\n\n$(DOC_WARNINGS)" | tr '\1' '\n' \
	&& exit 1)
	

clean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 22):
	@rm -rf .build
	@rm -f swiftlint.result.json
	@rm -f info.lcov
	

test-ios:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 94):
	@echo "Testing for iOS..."
	@xcodebuild \
	-scheme "$(SCHEME)" \
	-sdk iphonesimulator \
	-destination $(IPHONE_DESTINATION) \
	-parallel-testing-enabled YES \
	test
	

build-ios:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 44):
	@echo "Building for iOS..."
	@xcodebuild \
	-scheme "$(SCHEME)" \
	-sdk iphonesimulator \
	-destination $(IPHONE_DESTINATION) \
	clean build
	

lint:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 18):
	$(call brew_install,swiftlint) && swiftlint --strict
	

analyse:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 132):
	@echo "Analysing for SonarCloud..."
	$(call brew_install,swiftlint)
	$(call brew_install,sonar-scanner)
	@set -o pipefail && swiftlint --reporter json > swiftlint.result.json
	@set -o pipefail && xcodebuild \
	-scheme "$(SCHEME)" \
	-sdk iphonesimulator \
	-destination $(IPHONE_DESTINATION) \
	-derivedDataPath Build/ \
	-enableCodeCoverage YES \
	clean build test
	@bash xccov-to-sonarqube-generic.sh Build/Logs/Test/*.xcresult/ > sonarqube-generic-coverage.xml
	@sonar-scanner -Dsonar.projectKey=$(SONARCLOUD_ORGANISATION)_$(SONARCLOUD_PROJECT_NAME) -Dsonar.organization=$(SONARCLOUD_ORGANISATION) -Dsonar.host.url="https://sonarcloud.io" -Dsonar.sources=Sources -Dsonar.coverageReportPaths=sonarqube-generic-coverage.xml -Dsonar.swift.swiftLint.reportPaths=swiftlint.result.json -Dsonar.cfamily.build-wrapper-output.bypass=true
	

# files hash-table stats:
# Load=22/1024=2%, Rehash=0, Collisions=0/42=0%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 1
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4087 / max = 4087 / min = 4087 / avg = 4087

# Finished Make data base on Mon Jun  6 23:01:22 2022

 
