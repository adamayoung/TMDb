name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    paths:
      - ".github/workflows/ci.yml"
      - "**/*.swift"
  workflow_dispatch:

concurrency:
  group: "ci-${{ github.head_ref || github.run_id }}"
  cancel-in-progress: true

env:
  DEVELOPER_DIR: /Applications/Xcode_16.1.app/Contents/Developer

jobs:
  build-test:
    name: Build and Test
    runs-on: macos-15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        run: swift build --build-tests -Xswiftc -warnings-as-errors

      - name: Test
        run: swift test --filter TMDbTests --enable-code-coverage

      - name: Prepare Code Coverage
        run: |
          xcrun llvm-cov \
          export -format="lcov" \
          .build/debug/TMDbPackageTests.xctest/Contents/MacOS/TMDbPackageTests \
          -instr-profile .build/debug/codecov/default.profdata > info.lcov

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: info.lcov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      
      - name: Build for Release
        run: swift build -c release -Xswiftc -warnings-as-errors
  
  build-and-test-platforms:
    name: Build and Test (${{ matrix.name }})
    runs-on: macos-15
    continue-on-error: true
    strategy:
      matrix:
        include:
          - name: iOS
            destination: platform=iOS Simulator,name=iPhone 16,OS=18.0
          - name: watchOS
            destination: platform=watchOS Simulator,name=Apple Watch Series 10 (46mm),OS=11.0
          - name: tvOS
            destination: platform=tvOS Simulator,name=Apple TV 4K (3rd generation),OS=18.0
          - name: visionOS
            destination: platform=visionOS Simulator,name=Apple Vision Pro,OS=2.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        run: set -o pipefail && NSUnbufferedIO=YES xcodebuild build-for-testing -scheme TMDb -only-testing TMDbTests -destination '${{ matrix.destination }}'
      
      - name: Test
        run: set -o pipefail && NSUnbufferedIO=YES xcodebuild test-without-building -scheme TMDb -only-testing TMDbTests -destination '${{ matrix.destination }}'
  
  build-test-linux:
    name: Build and Test (Linux)
    runs-on: ubuntu-latest
    container: swift:6.0.2-jammy
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        run: swift build --build-tests -Xswiftc -warnings-as-errors

      - name: Test
        run: swift test --skip-build --filter TMDbTests
      
      - name: Build for Release
        run: swift build -c release -Xswiftc -warnings-as-errors
