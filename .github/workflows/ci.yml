name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: macos-12
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: swiftlint
        run: swiftlint --strict

  build-test:
    name: Build and Test
    runs-on: macos-12
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache SPM
        uses: actions/cache@v2
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
      
      - name: Resolve Packages
        run: xcodebuild -scheme "TMDb" -resolvePackageDependencies -derivedDataPath ./.build
      
      - name: Clean
        run: xcodebuild -scheme "TMDb" -destination "platform=iOS Simulator,name=iPhone 13 Pro" -derivedDataPath ./.build clean

      - name: Build
        run: set -o pipefail && xcodebuild -scheme "TMDb" -sdk iphonesimulator -destination "platform=iOS Simulator,name=iPhone 13 Pro" -derivedDataPath ./.build -parallelizeTargets build-for-testing | xcpretty -c

      - name: Test
        run: set -o pipefail && xcodebuild -scheme "TMDb" -sdk iphonesimulator -destination "platform=iOS Simulator,name=iPhone 13 Pro" -derivedDataPath ./.build -enableCodeCoverage YES test-without-building | xcpretty -c
  
  documentation:
    name: Compile Documentation
    runs-on: macos-12
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache SPM
        uses: actions/cache@v2
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Compile
        run: make test-docs
